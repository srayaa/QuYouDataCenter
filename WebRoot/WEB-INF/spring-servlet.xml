<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
           >

	<!-- 配置项不但启用了对类包进行扫描以实施注释驱动 Bean 定义的功能，同时还启用了注释驱动自动注入的功能 -->
	<!-- 因此当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了。 -->
	<context:component-scan base-package="com.*" />
	<!-- 其作用是如果你想在程序中使用注解，就必须先注册该注解对应的类， -->
	<context:annotation-config /> <!-- 告诉spring 去读 @Transactional 标注 ........事物扫描--> 
	<mvc:annotation-driven />  
	<context:property-placeholder location="classpath:config.properties"/>  
	<mvc:resources location="/js/" mapping="/js/**"/>
	 <mvc:resources location="/css/" mapping="/css/**"/>
    
		<bean id="LocaleInterceptor" class="com.interceptor.PerformanceInterceptor"/>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		  <property name="messageConverters">  
        <list>  
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <!-- <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> --></bean>  
        </list>  
        </property>  
        </bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
			<property name="interceptors">
			<list>
				<ref bean="LocaleInterceptor"/>
			</list>
		</property>
	</bean>
		
	
		<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 <property name="prefix" value="/WEB-INF/" />   
		 <property name="suffix"  value=".jsp"/> 
		 <property name="contentType" value="text/html;charset=utf-8" />
		</bean>
<!-- 	 <bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean" /> -->
	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />

		<property name="requestContextAttribute" value="rc" />
	</bean> -->
<!-- 	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings" ref="freemarkerConfiguration"/>
		<property name="templateLoaderPath">
			<value>/WEB-INF/</value>
		</property>
		
		
		
		<property name="freemarkerVariables">
			<map>
				<entry key="webRoot" value="/shop" />
				<entry key="jsRoot" value="/shop/js" />
			</map>
		</property>
	</bean> -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName"><value>${driver}</value></property>
        <property name="url"><value>${url}</value></property>
        <property name="username"><value>${name}</value></property>
        <property name="password"><value>${password}</value></property>
    </bean>
  
  <!-- jdbc事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"><ref bean="dataSource" /></property>
    </bean>

    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource" /></property> 
    </bean>
	  
    <tx:annotation-driven  transaction-manager="transactionManager"/> <!-- 自动包装代码，生产事务管理 -->

</beans> 