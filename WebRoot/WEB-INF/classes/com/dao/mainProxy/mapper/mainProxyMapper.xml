<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.mainProxy.mapper.MainProxyMapper">
	<!-- 查找 -->
	<select id="getMainProxyByID" parameterType="int" resultMap="MainProxyMap">
		select* from t_mainproxy where f_user_id =#{userId}
	</select>
	<!-- 查找 -->
	<select id="getMainProxyLikeUsername" parameterType="String"
		resultMap="MainProxyMap">
		select* from t_mainproxy where f_username LIKE
		CONCAT(CONCAT('%',#{_parameter}),'%')
	</select>
	<!-- 插入 -->
	<!-- useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到MainProxy的id属性 -->
	<insert id="addMainProxy" parameterType="MainProxy"
		useGeneratedKeys="true" keyProperty="f_user_id">
		insert into
		t_mainproxy(f_username,f_password,f_ini_password,f_card_l_time,f_card_l_count,f_card_f_count,f_address,f_contact_name,f_contact_phone,f_create_time,f_emergency_contact)
		values(#{username},#{password},#{initPassword},#{cardLTime},#{cardLCount},#{cardFCount},#{address},#{contactName},#{contactPhone},#{createTime},#{emergencyContact})
	</insert>

	<update id="editPassword" parameterType="MainProxy">
		update t_mainproxy set
		f_password= #{password} where f_user_id = #{userId}
	</update>
	<!-- 删除 -->
	<delete id="deleteMainProxy" parameterType="int">
		delete from
		t_mainproxy where f_user_id = #{userId}
	</delete>

	<!-- 修改 -->
	<update id="updateMainProxy" parameterType="MainProxy">
		update t_mainproxy
		set f_user_id= #{userId},f_username = #{username}
		,f_password=#{password} ,f_card_l_time=#{cardLTime}
		,f_card_l_count=#{cardLCount} ,f_card_f_count=#{cardFCount}
		,f_address=#{address}
		,f_contact_name=#{contactName},f_contact_phone=#{contactPhone},f_emergency_contact=#{emergencyContact}
		where f_user_id = #{userId}
	</update>
	<!-- 修改 -->
	<update id="updateCardLCount" parameterType="MainProxy">
		update t_mainproxy
		set f_card_l_count=
		#{cardLCount},f_income=#{income},f_card_l_time=#{cardLTime} where
		f_user_id =
		#{userId}
	</update>
	<!-- 修改 -->
	<update id="updateCardLTime" parameterType="MainProxy">
		update t_mainproxy
		set f_card_l_time= #{cardLTime} where f_user_id =
		#{userId}
	</update>
	<!-- 修改 -->
	<update id="updateCardFCount" parameterType="MainProxy">
		update t_mainproxy
		set f_card_f_count= #{cardFCount},f_income=#{income} where f_user_id =
		#{userId}
	</update>
	<!-- 修改 -->
	<select id="getMainProxys" parameterType="java.util.HashMap" resultMap="MainProxyMap">
		select * from t_mainproxy
		<if test="startTime!=null or endTime!=null">where</if>
		<if test="startTime!=null"> f_create_time >= #{startTime}</if>
		<if test="startTime!=null and endTime!=null">and</if>
		<if test="endTime!=null"> #{endTime} >= f_create_time</if>
		order by f_create_time desc
		<if test="startIndex!=null">limit #{startIndex},</if>
		<if test="length!=null">#{length}</if>
	</select>
	<select id="getMainProxysCount" parameterType="int" resultType="int">
		select count(*) from t_mainproxy
	</select>
	
	
	<resultMap type="com.pojo.MainProxy" id="MainProxyMap">
		<!-- column:对应的列名 property:对应的属性名 -->
		<result column="f_user_id" property="userId" />
		<result column="f_username" property="username" />
		<result column="f_password" property="password" />
		<result column="f_card_l_time" property="cardLTime" />
		<result column="f_card_l_count" property="cardLCount" />
		<result column="f_card_f_count" property="cardFCount" />
		<result column="f_income" property="income" />
		<result column="f_address" property="address" />
		<result column="f_contact_name" property="contactName" />
		<result column="f_contact_phone" property="contactPhone" />
		<result column="f_emergency_contact" property="emergencyContact" />
		<result column="f_create_time" property="createTime" />
	</resultMap>
</mapper>
